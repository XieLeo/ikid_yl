// Generated by gencpp from file config_server/Load.msg
// DO NOT EDIT!


#ifndef CONFIG_SERVER_MESSAGE_LOAD_H
#define CONFIG_SERVER_MESSAGE_LOAD_H

#include <ros/service_traits.h>


#include <config_server/LoadRequest.h>
#include <config_server/LoadResponse.h>


namespace config_server
{

struct Load
{

typedef LoadRequest Request;
typedef LoadResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Load
} // namespace config_server


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::config_server::Load > {
  static const char* value()
  {
    return "030824f52a0628ead956fb9d67e66ae9";
  }

  static const char* value(const ::config_server::Load&) { return value(); }
};

template<>
struct DataType< ::config_server::Load > {
  static const char* value()
  {
    return "config_server/Load";
  }

  static const char* value(const ::config_server::Load&) { return value(); }
};


// service_traits::MD5Sum< ::config_server::LoadRequest> should match
// service_traits::MD5Sum< ::config_server::Load >
template<>
struct MD5Sum< ::config_server::LoadRequest>
{
  static const char* value()
  {
    return MD5Sum< ::config_server::Load >::value();
  }
  static const char* value(const ::config_server::LoadRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::config_server::LoadRequest> should match
// service_traits::DataType< ::config_server::Load >
template<>
struct DataType< ::config_server::LoadRequest>
{
  static const char* value()
  {
    return DataType< ::config_server::Load >::value();
  }
  static const char* value(const ::config_server::LoadRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::config_server::LoadResponse> should match
// service_traits::MD5Sum< ::config_server::Load >
template<>
struct MD5Sum< ::config_server::LoadResponse>
{
  static const char* value()
  {
    return MD5Sum< ::config_server::Load >::value();
  }
  static const char* value(const ::config_server::LoadResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::config_server::LoadResponse> should match
// service_traits::DataType< ::config_server::Load >
template<>
struct DataType< ::config_server::LoadResponse>
{
  static const char* value()
  {
    return DataType< ::config_server::Load >::value();
  }
  static const char* value(const ::config_server::LoadResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CONFIG_SERVER_MESSAGE_LOAD_H
